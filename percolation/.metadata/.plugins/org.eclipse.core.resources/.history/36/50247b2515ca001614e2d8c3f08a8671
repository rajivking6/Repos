import java.util.Arrays;
import java.util.ArrayList; 

public class FastCollinearPoints {
	private Point p;
	private ArrayList<LineSegment> lines = new ArrayList<>();
    public FastCollinearPoints(Point[] points){
 	   p = points[0];
 	   int index =0;
 	   for (int i = 0; i < points.length; i++)
 	       if (points[i].compareTo(p) <0)
 	       {
 	    	   index =i;
 	           p = points[i];
 	           break;
 	       }

      if (points == null)
         throw new NullPointerException();
       Arrays.sort(points);
	   Arrays.sort(points,p.slopeOrder());
	   double[] slopes = new double[points.length];
	   for(int i =0;i<slopes.length;i++){
		   if(i!=index)
			   slopes[i] = p.slopeTo(points[i]); 
		 /*  for(int j =1; j<slopes.length;j++){
				while(slopes[i]==slopes[j])	
					lines.add(new LineSegment(points[0],points[j+1]));
			   }*/
		   int end =1;
		   while(slopes[i]==slopes[end]&&end<slopes.length-2){
			   end++;
		   }
		   lines.add(new LineSegment(p,points[end+1]));
		 
	   }

	   
	   
	   
   }// finds all line segments containing 4 or more points
   public int numberOfSegments(){
	   return lines.size();
   }// the number of line segments
   public LineSegment[] segments(){
	   LineSegment[] line = new LineSegment[lines.size()];
	   line = lines.toArray(line);
	   return line;
   }// the line segments
   public static void main(String[] args){
	   Point p1 = new Point(3,4);
	   Point p2 = new Point(4,4);
	   Point p3 = new Point(5,4);
	   Point p4 = new Point(1,4);
	   Point p5 = new Point(10,10);
	   Point[] array ={p1,p5, p2,p3,p4,};
	   FastCollinearPoints points = new FastCollinearPoints(array);
	   for(LineSegment p: points.segments()){
		   System.out.print(p + " ");		   
	   }
   }
}
