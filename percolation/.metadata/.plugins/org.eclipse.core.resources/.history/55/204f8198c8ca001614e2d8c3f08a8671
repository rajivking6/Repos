import java.util.Arrays;
import java.util.ArrayList; 

public class FastCollinearPoints {
	private Point p;
	private ArrayList<LineSegment> lines = new ArrayList<>();
    public FastCollinearPoints(Point[] points){
      if (points == null)
         throw new NullPointerException();
     /* for(Point p: points)
   	   System.out.print(p+ " ");
       System.out.println();
       for(Point p: points){
    	   Arrays.sort(points,p.slopeOrder());
       	   System.out.print(p+ " ");
    }
       	   System.out.println();
       for(Point p: points)
    	   System.out.print(p+ " ");*/
	   double[] slopes = new double[points.length-1];
	   for(int i =0;i<slopes.length;i++){
			   slopes[i] = points[0].slopeTo(points[i+1]); 
		 /*  for(int j =1; j<slopes.length;j++){
				while(slopes[i]==slopes[j])	
					lines.add(new LineSegment(points[0],points[j+1]));
			   }*/
		   int end =1;
		   while(slopes[i]==slopes[end]&&end<slopes.length-1){
			   end++;
		   }
		   if(end>=4)
			   lines.add(new LineSegment(p,points[end+1]));
		 
	   }

     
	   
	   
   }// finds all line segments containing 4 or more points
    private LineSegment findEndpoints(Point[] coll){
 	   Point min = coll[0];
 	   Point max = coll[0];
 	   for(int i =0;i<coll.length;i++){
 		   if(min.compareTo(coll[i])>0)
 			   min = coll[i]; 
 		   if(max.compareTo(coll[i])<0)
 			   max = coll[i];
 	   }
 	   return new LineSegment(min,max);
 	   
    }
   public int numberOfSegments(){
	   return lines.size();
   }// the number of line segments
   public LineSegment[] segments(){
	   LineSegment[] line = new LineSegment[lines.size()];
	   line = lines.toArray(line);
	   return line;
   }// the line segments
   public static void main(String[] args){
	   Point p1 = new Point(3,4);
	   Point p2 = new Point(4,4);
	   Point p3 = new Point(5,4);
	   Point p4 = new Point(1,4);
	   Point p5 = new Point(10,10);
	   Point[] array ={p1,p5, p2,p3,p4,};
	   FastCollinearPoints points = new FastCollinearPoints(array);
	   for(LineSegment p: points.segments()){
		   System.out.print(p + " ");		   
	   }
   }
}
